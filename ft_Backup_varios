
// char	*ft_expand_dquotes(t_minishell *minishell, char *segment)
// {
// 	char	*expanded;
// 	char	*env_value;
// 	int		start;
// 	int		i;
// 	int		new_size;

// 	expanded = ft_calloc(1, 1);
// 	new_size = 1;
// 	i = 0;
// 	while (segment[i])
// 	{
// 		if (segment[i] == '$' && segment[i + 1] != '\0')
// 		{
// 			start = ++i;
// 			while (segment[i] && (ft_isalnum(segment[i]) || segment[i] == '_'))
// 				i++;
// 			char *var_name = ft_substr(segment, start, i - start);
// 			env_value = ft_find_dir(minishell, var_name);
// 			free(var_name);
// 			if (env_value)
// 			{
// 				new_size += ft_strlen(env_value);
// 				expanded = ft_realloc(expanded, new_size - \
//				ft_strlen(env_value) - 1, new_size);
// 				ft_memmove(expanded + ft_strlen(expanded), env_value, \
//				ft_strlen(env_value));
// 			}
// 		}
// 		else
// 		{
// 			start = i;
// 			while (segment[i] && segment[i] != '$')
// 				i++;
// 			char *literal = ft_substr(segment, start, i - start);
// 			new_size += ft_strlen(literal);
// 			expanded = ft_realloc(expanded, new_size - ft_strlen(literal) \
//			- 1, new_size);
// 			ft_memmove(expanded + ft_strlen(expanded), literal, \
//			ft_strlen(literal));
// 			free(literal);
// 		}
// 	}
// 	return expanded;
// }

// static void	ft_expander_action(t_minishell *minishell, t_token *token)
// {
// 	char	*new_value;
// 	char	*expanded_part;
// 	char	*env_value;
// 	int		new_size;
// 	int		i;
// 	int		start;

// 	new_value = ft_calloc(1, 1);
// 	new_size = 1;
// 	i = 0;

// 	while (token->token_value[i])
// 	{
// 		if (token->token_value[i] == '\'')
// 		{
// 			start = ++i;
// 			while (token->token_value[i] && token->token_value[i] != '\'')
// 				i++;
// 			char *segment = ft_substr(token->token_value, start, i - start);
// 			new_size += ft_strlen(segment);
// 			new_value = ft_realloc(new_value, new_size - ft_strlen(segment) \
//			- 1, new_size);
// 			ft_memmove(new_value + ft_strlen(new_value), segment, \
//			ft_strlen(segment));
// 			free(segment);
// 			if (token->token_value[i] == '\'')
// 				i++;
// 		}
// 		else if (token->token_value[i] == '\"')
// 		{
// 			start = ++i;
// 			while (token->token_value[i] && token->token_value[i] != '\"')
// 			{
// 				if (token->token_value[i] == '$')
// 				{
// 					start = ++i;
// 					if (token->token_value[start] == '?')
// 					{
// 						i++;
// 						char *status_str = ft_itoa(minishell->exit);
// 						new_size += ft_strlen(status_str);
// 						new_value = ft_realloc(new_value, new_size - \
//						ft_strlen(status_str) - 1, new_size);
// 						ft_memmove(new_value + ft_strlen(new_value), \
//						status_str, ft_strlen(status_str));
// 						free(status_str);
// 					}
// 					else
// 					{
// 						while (token->token_value[i] && \
//						(ft_isalnum(token->token_value[i]) || \
//						token->token_value[i] == '_'))
// 							i++;
// 						expanded_part = ft_substr(token->token_value, start, \
//						i - start);
// 						env_value = ft_find_dir(minishell, expanded_part);
// 						free(expanded_part);
// 						if (env_value)
// 						{
// 							new_size += ft_strlen(env_value);
// 							new_value = ft_realloc(new_value, new_size - \
//							ft_strlen(env_value) - 1, new_size);
// 							ft_memmove(new_value + ft_strlen(new_value), \
//							env_value, ft_strlen(env_value));
// 						}
// 					}
// 				}
// 				else
// 				{
// 					start = i;
// 					while (token->token_value[i] && token->token_value[i] != \
//					'$' && token->token_value[i] != '\"')
// 						i++;
// 					char *literal = ft_substr(token->token_value, start, i - \
//					start);
// 					new_size += ft_strlen(literal);
// 					new_value = ft_realloc(new_value, new_size - \
//					ft_strlen(literal) - 1, new_size);
// 					ft_memmove(new_value + ft_strlen(new_value), literal, \
//					ft_strlen(literal));
// 					free(literal);
// 				}
// 			}
// 			if (token->token_value[i] == '\"')
// 				i++;
// 		}
// 		else if (token->token_value[i] == '$')
// 		{
// 			start = ++i;
// 			if (token->token_value[start] == '?')
// 			{
// 				i++;
// 				char *status_str = ft_itoa(minishell->exit);
// 				new_size += ft_strlen(status_str);
// 				new_value = ft_realloc(new_value, new_size - \
//				ft_strlen(status_str) - 1, new_size);
// 				ft_memmove(new_value + ft_strlen(new_value), status_str, \
//				(status_str));
// 				free(status_str);
// 			}
// 			else
// 			{
// 				while (token->token_value[i] && \
//				(ft_isalnum(token->token_value[i]) || token->token_value[i] \
//				== '_'))
// 					i++;
// 				expanded_part = ft_substr(token->token_value, start, i - start);
// 				env_value = ft_find_dir(minishell, expanded_part);
// 				free(expanded_part);
// 				if (env_value)
// 				{
// 					new_size += ft_strlen(env_value);
// 					new_value = ft_realloc(new_value, new_size - \
//					(env_value) - 1, new_size);
// 					ft_memmove(new_value + ft_strlen(new_value), env_value, \
//					ft_strlen(env_value));
// 				}
// 			}
// 		}
// 		else
// 		{
// 			start = i;
// 			while (token->token_value[i] && token->token_value[i] != '$' \
// 					&& token->token_value[i] != '\'' && token->token_value[i] \
//					!= '\"')
// 				i++;
// 			char *segment = ft_substr(token->token_value, start, i - start);
// 			new_size += ft_strlen(segment);
//			- 1, new_size);
// 			ft_memmove(new_value + ft_strlen(new_value), segment, \
//			ft_strlen(segment));
// 			free(segment);
// 		}
// 	}
// 	free(token->token_value);
// 	token->token_value = new_value;
// }